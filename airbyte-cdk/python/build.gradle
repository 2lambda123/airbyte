plugins {
    id 'airbyte-python'
    id 'airbyte-docker'
}

airbytePython {
    moduleDirectory 'airbyte_cdk'
}

task generateComponentManifestClassFiles(type: Exec) {
    environment 'ROOT_DIR', rootDir.absolutePath
    commandLine 'bin/generate-component-manifest-files.sh'
    dependsOn ':tools:code-generator:airbyteDocker'
}

task validateSourceYamlManifest(type: Exec) {
    environment 'ROOT_DIR', rootDir.absolutePath
    commandLine 'bin/validate-yaml-schema.sh'
}

task runLowCodeConnectorUnitTests(type: Exec) {
    environment 'ROOT_DIR', rootDir.absolutePath
    commandLine 'bin/low-code-unit-tests.sh'
}

task runMypyOnModifiedFiles(type: Exec) {
    environment 'ROOT_DIR', rootDir.absolutePath
    def changedFiles = project.hasProperty('changedFiles') ? project.changedFiles : ''
    commandLine "bin/run-mypy-on-modified-files.sh", "${changedFiles}"
}

runMypyOnModifiedFiles.dependsOn generateComponentManifestClassFiles
blackFormat.dependsOn runMypyOnModifiedFiles
isortFormat.dependsOn runMypyOnModifiedFiles
flakeCheck.dependsOn runMypyOnModifiedFiles
installReqs.dependsOn runMypyOnModifiedFiles
