global:
  serviceAccountName: placeholderServiceAccount
  deploymentMode: oss
  configMapName: ""
  secretName: ""
  extraContainers: [ ]
  database:
    secretName: ""
    secretValue: ""
    host: "example.com"
    port: "5432"
  secrets: { }

enabled: true
##  connector-builder-server.replicaCount Number of connector-builder-server replicas
replicaCount: 1

##  connector-builder-server.image.repository The repository to use for the airbyte connector-builder-server image.
##  connector-builder-server.image.pullPolicy the pull policy to use for the airbyte connector-builder-server image
##  connector-builder-server.image.tag The airbyte connector-builder-server image tag. Defaults to the chart's AppVersion
image:
  repository: airbyte/connector-builder-server
  pullPolicy: IfNotPresent

##  connector-builder-server.podAnnotations [object] Add extra annotations to the connector-builder-server pod(s)
##
podAnnotations: { }

## Web app resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
## We usually recommend not to specify default resources and to leave this as a conscious
## choice for the user. This also increases chances charts run on environments with little
## resources, such as Minikube. If you do want to specify resources, uncomment the following
## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
##  cron.resources.limits [object] The resources limits for the Web container
##  cron.resources.requests [object] The requested resources for the Web container
resources:
  ## Example:
  ## limits:
  ##    cpu: 200m
  ##    memory: 1Gi
  limits: { }
  ## Examples:
  ## requests:
  ##    memory: 256Mi
  ##    cpu: 250m
  requests: { }

##  cron.nodeSelector [object] Node labels for pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: { }

##  cron.tolerations [array] Tolerations for cron pod assignment.
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: [ ]

##  cron.affinity [object] Affinity and anti-affinity for cron pod assignment.
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
##
affinity: { }

##  cron.extraVolumeMounts [array] Additional volumeMounts for cron container(s).
## Examples (when using `cron.containerSecurityContext.readOnlyRootFilesystem=true`):
## extraVolumeMounts:
##   - name: var-run
##     mountPath: /var/run/
##   - name: var-cache-nginx
##     mountPath: /var/cache/nginx
##   - mountPath: /etc/nginx/conf.d
##     name: nginx-conf-d
##
extraVolumeMounts: [ ]

##  cron.extraVolumes [array] Additional volumes for cron pod(s).
## Examples (when using `cron.containerSecurityContext.readOnlyRootFilesystem=true`):
## extraVolumes:
##   - name: var-run
##     emptyDir: {}
##   - name: var-cache-nginx
##     emptyDir: {}
##   - name: nginx-conf-d
##     emptyDir: {}
##
extraVolumes: [ ]

##  extraContainer [array] Additional container for server pod(s)
## Example:
# extraContainers:
#   - name: otel_collector
#     image: somerepo/someimage:sometag
#     args: [
#         "--important-args"
#     ]
#     ports:
#       - containerPort: 443
#     volumeMounts:
#       - name: volumeMountCool
#         mountPath: /some/path
#         readOnly: true
extraContainers: [ ]

##  extraInitContainers [array] Additional init containers for server pod(s)
## Example:
# extraInitContainers:
#   - name: sleepy
#     image: alpine
#     command: ['sleep', '60']

extraInitContainers: [ ]

##  extraEnv [array] Supply extra env variables to main container using full notation
## Example: (With default env vars and values taken from generated config map)
# extraEnv:
#   - name: POSTGRES_USER
#     valueFrom:
#       secretKeyRef:
#         name: airbyte-secrets
#         key: DATABASE_USER
#   - name: POSTGRES_PWD
#     valueFrom:
#       secretKeyRef:
#         name: airbyte-secrets
#         key: DATABASE_PASSWORD
#   - name: DYNAMIC_CONFIG_FILE_PATH
#     value: "config/dynamicconfig/development.yaml"
#   - name: DB
#     value: "postgresql"
#   - name: DB_PORT
#     valueFrom:
#       configMapKeyRef:
#         name: airbyte-env
#         key: DATABASE_PORT
#   - name: POSTGRES_SEEDS
#     valueFrom:
#       configMapKeyRef:
#         name: airbyte-env
#         key: DATABASE_HOST
##
extraEnv: [ ]
##  secrets [object] Supply additional secrets to container
## Example:
## secrets:
##   DATABASE_PASSWORD: strong-password
##   DATABASE_USER: my-db-user
secrets: { }

##  env_vars [object] Supply extra env variables to main container using simplified notation
## Example with default vars for cron:
# env_vars:
#   AIRBYTE_VERSION: 0.40.4

#   # Miscellaneous
#   TRACKING_STRATEGY: segment
#   API_URL: /api/v1/
#   INTERNAL_API_HOST: airbyte-server-svc:8001

env_vars: { }



