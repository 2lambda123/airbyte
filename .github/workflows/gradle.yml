name: Airbyte CI

on:
  schedule:
    - cron: '0 */1 * * *'
  push:

jobs:

  ## Kube Acceptance Tests
  # In case of self-hosted EC2 errors, remove this block.
  # Docker acceptance tests run as part of the build job.
  start-kube-acceptance-test-runner:
    name: Start Kube Acceptance Test EC2 Runner
    timeout-minutes: 10
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.SELF_RUNNER_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SELF_RUNNER_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2.3.0
        with:
          mode: start
          github-token: ${{ secrets.SELF_RUNNER_GITHUB_ACCESS_TOKEN }}
          ec2-image-id: ami-0d4083c04fde515c4
          ec2-instance-type: c5.2xlarge
          subnet-id: subnet-0469a9e68a379c1d3
          security-group-id: sg-0793f3c9413f21970
  kube-acceptance-test:
    # In case of self-hosted EC2 errors, removed the `needs` line and switch back to running on ubuntu-latest.
    needs: start-kube-acceptance-test-runner # required to start the main job when the runner is ready
    runs-on: ${{ needs.start-kube-acceptance-test-runner.outputs.label }} # run the job on the newly created runner
    environment: more-secrets
    name: Acceptance Tests (Kube)
    timeout-minutes: 90
    steps:
      - name: Checkout Airbyte
        uses: actions/checkout@v2

      - uses: actions/setup-java@v1
        with:
          java-version: '14'

      - uses: actions/setup-node@v1
        with:
          node-version: '14.7'

      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Install Pyenv
        run: python3 -m pip install virtualenv==16.7.9 --user

      - name: Fix EC-2 Runner
        run: |
          mkdir -p /home/runner

      - name: Set up CI Gradle Properties
        run: |
          mkdir -p ~/.gradle/
          cat > ~/.gradle/gradle.properties <<EOF
          org.gradle.jvmargs=-Xmx8g -Xss4m
          org.gradle.workers.max=8
          org.gradle.vfs.watch=false
          EOF

      - name: Install socat (required for port forwarding)
        run: |
          sudo apt-get update
          sudo apt-get install socat

      - name: Create cluster config file
        run: |
          cat > /tmp/kind-config.yaml <<EOF
          kind: Cluster
          apiVersion: kind.x-k8s.io/v1alpha4
          nodes:
          - role: control-plane
          - role: worker
          - role: worker
          EOF

      - name: Check Docker System Info
        run: docker system info

      - name: KIND Kubernetes Cluster Setup
        uses: helm/kind-action@v1.2.0
        with:
          node_image: kindest/node:v1.21.2
          config: /tmp/kind-config.yaml
        # In case of self-hosted EC2 errors, remove this env block.
        env:
          USER: ubuntu
          HOME: /home/ubuntu

      - name: Describe kube nodes
        run: kubectl describe nodes
        env:
          USER: ubuntu
          HOME: /home/ubuntu

      - name: Build Platform Docker Images
        run: SUB_BUILD=PLATFORM ./gradlew composeBuild --scan
        env:
          USER: ubuntu
          HOME: /home/ubuntu

      - name: Describe kube nodes
        run: kubectl describe nodes
        env:
          USER: ubuntu
          HOME: /home/ubuntu
# rerun to induce failure 4
#      - name: Run Logging Tests
#        run: ./tools/bin/cloud_storage_logging_test.sh
#        env:
#          USER: ubuntu
#          HOME: /home/ubuntu
#          AWS_S3_INTEGRATION_TEST_CREDS: ${{ secrets.AWS_S3_INTEGRATION_TEST_CREDS }}
#          GOOGLE_CLOUD_STORAGE_TEST_CREDS: ${{ secrets.GOOGLE_CLOUD_STORAGE_TEST_CREDS }}
#
#      - name: Show Disk Usage
#        run: |
#          df -h
#          docker system df

#      - name: Run GCP End-to-End Acceptance Tests
#        env:
#          USER: ubuntu
#          HOME: /home/ubuntu
#          AWS_S3_INTEGRATION_TEST_CREDS: ${{ secrets.AWS_S3_INTEGRATION_TEST_CREDS }}
#          SECRET_STORE_GCP_CREDENTIALS: ${{ secrets.SECRET_STORE_GCP_CREDENTIALS }}
#          SECRET_STORE_GCP_PROJECT_ID: ${{ secrets.SECRET_STORE_GCP_PROJECT_ID }}
#          SECRET_STORE_FOR_CONFIGS: ${{ secrets.SECRET_STORE_FOR_CONFIGS }}
#        run: |
#          CI=true ./tools/bin/gcp_acceptance_tests.sh

      - name: Run Kubernetes End-to-End Acceptance Tests
        env:
          USER: ubuntu
          HOME: /home/ubuntu
          AWS_S3_INTEGRATION_TEST_CREDS: ${{ secrets.AWS_S3_INTEGRATION_TEST_CREDS }}
          SECRET_STORE_GCP_CREDENTIALS: ${{ secrets.SECRET_STORE_GCP_CREDENTIALS }}
          SECRET_STORE_GCP_PROJECT_ID: ${{ secrets.SECRET_STORE_GCP_PROJECT_ID }}
          SECRET_STORE_FOR_CONFIGS: ${{ secrets.SECRET_STORE_FOR_CONFIGS }}
        run: |
          CI=true IS_MINIKUBE=true ./tools/bin/acceptance_test_kube.sh
  # In case of self-hosted EC2 errors, remove this block.
  stop-kube-acceptance-test-runner:
    name: Stop Kube Acceptance Test EC2 Runner
    timeout-minutes: 10
    needs:
      - start-kube-acceptance-test-runner # required to get output from the start-runner job
      - kube-acceptance-test # required to wait when the main job is done
    runs-on: ubuntu-latest
    if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.SELF_RUNNER_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SELF_RUNNER_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2.3.0
        with:
          mode: stop
          github-token: ${{ secrets.SELF_RUNNER_GITHUB_ACCESS_TOKEN }}
          label: ${{ needs.start-kube-acceptance-test-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-kube-acceptance-test-runner.outputs.ec2-instance-id }}
