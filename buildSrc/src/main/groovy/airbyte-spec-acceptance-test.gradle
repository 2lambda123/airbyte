import org.gradle.api.Plugin
import org.gradle.api.Project

class AirbyteSpecAcceptanceTestPlugin implements Plugin<Project> {
    void apply(Project project) {
        project.task('specAcceptanceTest') {
            doFirst {
                project.exec {
                    def targetMountDirectory = "/test_input"
                    def args = [
                        'docker', 'run', '--rm', '-i',
                        // provide access to the docker daemon
                        '-v', '/var/run/docker.sock:/var/run/docker.sock',
                        // A container within a container mounts from the host filesystem, not the parent container.
                        // this forces /tmp to be the same directory for host, parent container, and child container.
                        '-v', '/tmp:/tmp',
                        // mount the project dir. all provided input paths must be relative to that dir.
                        '-v', "${project.projectDir.absolutePath}:${targetMountDirectory}",
                        '-w', "$targetMountDirectory",
                        '-e', "AIRBYTE_SAT_CONNECTOR_DIR=${project.projectDir.absolutePath}",
                        'airbyte/source-acceptance-test:dev',
                        '-p', 'source_acceptance_test.plugin',
                        // only run the test specs
                        '-k', 'TestSpec and not test_config_match_spec and not test_match_expected'
                    ]
                    commandLine args
                }
            }

            outputs.upToDateWhen { false }
        }

        project.specAcceptanceTest.dependsOn(':airbyte-integrations:bases:source-acceptance-test:airbyteDocker')
        project.specAcceptanceTest.dependsOn(project.build)
        project.specAcceptanceTest.dependsOn(project.airbyteDocker)
        if (project.hasProperty('airbyteDockerTest')){
            project.specAcceptanceTest.dependsOn(project.airbyteDockerTest)
        }

        // make sure we create the integrationTest task once
        if (!project.tasks.findByName('integrationTest')) {
            project.task('integrationTest')
        }

        project.integrationTest.dependsOn(project.specAcceptanceTest)
    }
}

