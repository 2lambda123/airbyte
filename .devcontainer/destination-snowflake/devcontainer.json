// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/python
{
    "name": "Snowflake Destination Connector DevContainer (Java)",

	"image": "mcr.microsoft.com/devcontainers/java:0-17",
	"features": {
		"ghcr.io/devcontainers/features/java:1": {
			"installGradle": true,
			"version": "latest",
			"jdkDistro": "open",
			"gradleVersion": "7.5.1"
			// "mavenVersion": "latest",
			// "antVersion": "latest"
		}
	},

    "workspaceFolder": "/workspaces/airbyte",
    // "workspaceFolder": "/workspaces/airbyte/airbyte-integrations/connectors/destination-snowflake",

    // Configure tool-specific properties.
    "customizations": {
        "vscode": {
            "extensions": [
				"vscjava.vscode-gradle"
			],
            "settings": {
                "extensions.ignoreRecommendations": true,
                "git.openRepositoryInParentFolders": "always"
            }
        }
    },

    "containerEnv": {
        "CONNECTOR_NAME": "destination-snowflake"
    }

    // Use 'postCreateCommand' to run commands after the container is created.
    // Post-create tasks:
    // 1. Create a symlink directory.
    // 2. Map the devcontainer.json file to it.
    // 3. Mark the root directory as 'safe' for git.
    // 4. Install the Python/Poetry dependencies.
    // "postCreateCommand": "mkdir -p ./.symlinks && ln -sf /workspaces/airbyte/.devcontainer/destination-snowflake/devcontainer.json ./.symlinks/destination-snowflake-devcontainer.json && ln -sf /workspaces/airbyte/docs/integrations/destinations/snowflake.md ./.symlinks/${CONNECTOR_NAME}-docs.md && ln -sf /workspaces/airbyte/airbyte-cdk/python/ ./.symlinks/airbyte_cdk && git config --add safe.directory /workspaces/airbyte"

    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    // "forwardPorts": [],

    // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
    // "remoteUser": "root"
}
