page_size: 50

schema_loader:
  type: JsonSchema
  file_path: "./source_my_hours/schemas/{{ options.name }}.json"
selector:
  type: RecordSelector
  extractor:
    type: JelloExtractor
    transform: "_"
requester:
  type: HttpRequester
  name: "{{ options['name'] }}"
  url_base: "https://api2.myhours.com/api"
  http_method: "GET"
  authenticator:
    class_name: "source_my_hours.auth.MyHoursAuthenticator"
    email: "{{ config.email }}"
    password: "{{ config.password }}"
  request_options_provider:
    request_headers:
      accept: "application/json"
      api-version: "1.0"
      Content-Type: "application/json"
retriever:
  type: SimpleRetriever
  name: "{{ options['name'] }}"
  primary_key: "{{ options['primary_key'] }}"
stream_slicer:
  type: "DatetimeStreamSlicer"
  start_datetime:
    datetime: "2017-01-01"
    datetime_format: "%Y-%m-%d"
  end_datetime:
    datetime: "2022-08-01"
    datetime_format: "%Y-%m-%d"
  step: "30d"
  cursor_field: "date"
  start_time_option:
    field_name: "DateFrom"
    inject_into: "request_parameter"
  end_time_option:
    field_name: "DateTo"
    inject_into: "request_parameter"
  datetime_format: "%Y-%m-%d"
clients_stream:
  type: DeclarativeStream
  $options:
    name: "clients"
  primary_key: "id"
  schema_loader:
    $ref: "*ref(schema_loader)"
  retriever:
    $ref: "*ref(retriever)"
    record_selector:
      $ref: "*ref(selector)"
    requester:
      $ref: "*ref(requester)"
      path: "/api/Clients"
    paginator:
      type: "NoPagination"
projects_stream:
  type: DeclarativeStream
  $options:
    name: "projects"
  primary_key: "id"
  schema_loader:
    $ref: "*ref(schema_loader)"
  retriever:
    $ref: "*ref(retriever)"
    record_selector:
      $ref: "*ref(selector)"
    requester:
      $ref: "*ref(requester)"
      path: "/api/Projects/getAll"
    paginator:
      type: "NoPagination"
tags_stream:
  type: DeclarativeStream
  $options:
    name: "tags"
  primary_key: "id"
  schema_loader:
    $ref: "*ref(schema_loader)"
  retriever:
    $ref: "*ref(retriever)"
    record_selector:
      $ref: "*ref(selector)"
    requester:
      $ref: "*ref(requester)"
      path: "/api/Tags"
    paginator:
      type: "NoPagination"
users_stream:
  type: DeclarativeStream
  $options:
    name: "users"
  primary_key: "id"
  schema_loader:
    $ref: "*ref(schema_loader)"
  retriever:
    $ref: "*ref(retriever)"
    record_selector:
      $ref: "*ref(selector)"
    requester:
      $ref: "*ref(requester)"
      path: "/api/Users/getAll"
    paginator:
      type: "NoPagination"

time_logs_stream:
  type: DeclarativeStream
  $options:
    name: "time_logs"
  primary_key: "id"
  schema_loader:
    $ref: "*ref(schema_loader)"
  retriever:
    $ref: "*ref(retriever)"
    record_selector:
      $ref: "*ref(selector)"
    requester:
      $ref: "*ref(requester)"
      path: "/api/Reports/activity"
    paginator:
      type: "NoPagination"
    stream_slicer:
      $ref: "*ref(stream_slicer)"

streams:
  - "*ref(clients_stream)"
  - "*ref(projects_stream)"
  - "*ref(tags_stream)"
  - "*ref(users_stream)"
  - "*ref(time_logs_stream)"
check:
  type: CheckStream
  stream_names: ["clients"]
