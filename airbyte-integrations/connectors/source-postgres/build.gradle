import org.jsonschema2pojo.SourceType

plugins {
    id 'application'
    // id 'airbyte-docker'  // Not working: remove?
    id 'airbyte-integration-test-java'
    id 'airbyte-java-connector'
    id 'airbyte-performance-test-java'
    id 'airbyte-connector-acceptance-test'
    id "org.jsonschema2pojo" version "1.2.1"
}

application {
    mainClass = 'io.airbyte.integrations.source.postgres.PostgresSource'
    applicationDefaultJvmArgs = ['-XX:+ExitOnOutOfMemoryError', '-XX:MaxRAMPercentage=75.0']
}

airbyteJavaConnector {
    cdkVersionRequired = '0.1.0'
    useCdkProjectRef = true
    features = ['db-sources']
}

airbyteJavaConnector.addCdkDependencies()

// Add a configuration for our migrations tasks defined below to encapsulate their dependencies
configurations {
    migrations.extendsFrom implementation
}

configurations {
    migrations.extendsFrom implementation
}

dependencies {
    migrations libs.platform.testcontainers.postgresql
    migrations sourceSets.main.output

    implementation project(":airbyte-cdk:java:airbyte-cdk:core")
    implementation project(":airbyte-cdk:java:airbyte-cdk:db-sources-feature")
    // implementation 'io.airbyte:airbyte-cdk:0.0.2'

    implementation libs.airbyte.protocol

    // Lombok
    implementation 'org.projectlombok:lombok:1.18.20'
    annotationProcessor('org.projectlombok:lombok:1.18.20')

    implementation 'org.apache.commons:commons-lang3:3.11'
    implementation libs.postgresql
    implementation libs.bundles.datadog

    testImplementation project(":airbyte-json-validation")
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation libs.connectors.testcontainers.jdbc
    testImplementation libs.connectors.testcontainers.postgresql
    testImplementation libs.junit.jupiter.system.stubs

    implementation libs.jooq
    implementation libs.jooq.meta
    implementation libs.jooq.codegen
    testImplementation libs.jooq
    testImplementation libs.jooq.meta
    testImplementation libs.jooq.codegen
    integrationTestJavaImplementation libs.jooq
    integrationTestJavaImplementation libs.jooq.meta
    integrationTestJavaImplementation libs.jooq.codegen
    performanceTestJavaImplementation libs.jooq
    performanceTestJavaImplementation libs.jooq.meta
    performanceTestJavaImplementation libs.jooq.codegen
}

jsonSchema2Pojo {
    sourceType = SourceType.YAMLSCHEMA
    source = files("${sourceSets.main.output.resourcesDir}/internal_models")
    targetDirectory = new File(project.buildDir, 'generated/src/gen/java/')
    removeOldOutput = true

    targetPackage = 'io.airbyte.integrations.source.postgres.internal.models'

    useLongIntegers = true
    generateBuilders = true
    includeConstructors = false
    includeSetters = true
}
