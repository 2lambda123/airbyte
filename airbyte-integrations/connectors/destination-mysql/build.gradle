plugins {
    id 'application'
    id 'airbyte-docker'
    id 'airbyte-integration-test-java'
}

application {
    mainClass = 'io.airbyte.integrations.destination.mysql.MySQLDestination'
    applicationDefaultJvmArgs = ['-XX:+ExitOnOutOfMemoryError', '-XX:MaxRAMPercentage=75.0']
}

dependencies {
    implementation project(':airbyte-db:db-lib')
    implementation project(':airbyte-integrations:bases:base-java')
    implementation libs.airbyte.protocol
    implementation project(':airbyte-integrations:bases:bases-destination-jdbc')

    implementation 'mysql:mysql-connector-java:8.0.22'

    integrationTestJavaImplementation project(':airbyte-integrations:bases:standard-destination-test')
    integrationTestJavaImplementation project(':airbyte-integrations:connectors:destination-mysql')
    integrationTestJavaImplementation libs.connectors.testcontainers.mysql

    implementation files(project(':airbyte-integrations:bases:base-java').airbyteDocker.outputs)
    integrationTestJavaImplementation files(project(':airbyte-integrations:bases:base-normalization').airbyteDocker.outputs)
}

tasks.named("airbyteDocker") {
    // this is really inefficent (because base-normalization:airbyteDocker builds 9 docker images)
    // but it's also just simple to implement.
    // this also goes away once airbyte-ci becomes a reality.
    dependsOn project(':airbyte-integrations:bases:base-normalization').airbyteDocker
}
