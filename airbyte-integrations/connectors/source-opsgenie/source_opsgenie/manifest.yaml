version: 0.51.16
type: DeclarativeSource
definitions:
  selector:
    type: RecordSelector
    extractor:
      type: DpathExtractor
      field_path:
        - data
  auth:
    type: ApiKeyAuthenticator
    api_token: "GenieKey {{ config['api_token'] }}"
    inject_into:
      type: RequestOption
      field_name: Authorization
      inject_into: header
  on_error:
    type: CompositeErrorHandler
    error_handlers:
      - type: DefaultErrorHandler
        backoff_strategies:
          - type: WaitUntilTimeFromHeader
            header: X-RateLimit-Period-In-Sec
  pagination:
    type: DefaultPaginator
    page_token_option:
      type: RequestPath
    pagination_strategy:
      type: CursorPagination
      cursor_value: '{{ response.get("paging", {}).get("next", {}) }}'
      stop_condition: '{{ not response.get("paging", {}).get("next", {}) }}'
check:
  type: CheckStream
  stream_names:
    - users
streams:
  - type: DeclarativeStream
    name: users
    primary_key:
      - id
    schema_loader:
      type: JsonFileSchemaLoader
      file_path: "./source_opsgenie/schemas/users.json"
    retriever:
      type: SimpleRetriever
      requester:
        type: HttpRequester
        url_base: "https://{{ config['endpoint'] }}"
        path: v2/users
        http_method: GET
        request_parameters: {}
        request_headers:
          Accept: application/json
        authenticator:
          $ref: "#/definitions/auth"
        error_handler:
          $ref: "#/definitions/on_error"
        request_body_json: {}
      record_selector:
        $ref: "#/definitions/selector"
      paginator:
        $ref: "#/definitions/pagination"
  - type: DeclarativeStream
    name: teams
    primary_key:
      - id
    schema_loader:
      type: JsonFileSchemaLoader
      file_path: "./source_opsgenie/schemas/teams.json"
    retriever:
      type: SimpleRetriever
      requester:
        type: HttpRequester
        url_base: "https://{{ config['endpoint'] }}"
        path: v2/teams
        http_method: GET
        request_parameters: {}
        request_headers:
          Accept: application/json
        authenticator:
          $ref: "#/definitions/auth"
        error_handler:
          $ref: "#/definitions/on_error"
        request_body_json: {}
      record_selector:
        $ref: "#/definitions/selector"
      paginator:
        $ref: "#/definitions/pagination"
  - type: DeclarativeStream
    name: services
    primary_key:
      - id
    schema_loader:
      type: JsonFileSchemaLoader
      file_path: "./source_opsgenie/schemas/services.json"
    retriever:
      type: SimpleRetriever
      requester:
        type: HttpRequester
        url_base: "https://{{ config['endpoint'] }}"
        path: v1/services
        http_method: GET
        request_parameters: {}
        request_headers:
          Accept: application/json
        authenticator:
          $ref: "#/definitions/auth"
        error_handler:
          $ref: "#/definitions/on_error"
        request_body_json: {}
      record_selector:
        $ref: "#/definitions/selector"
      paginator:
        $ref: "#/definitions/pagination"
  - type: DeclarativeStream
    name: integrations
    primary_key:
      - id
    schema_loader:
      type: JsonFileSchemaLoader
      file_path: "./source_opsgenie/schemas/integrations.json"
    retriever:
      type: SimpleRetriever
      requester:
        type: HttpRequester
        url_base: "https://{{ config['endpoint'] }}"
        path: v2/integrations
        http_method: GET
        request_parameters: {}
        request_headers:
          Accept: application/json
        authenticator:
          $ref: "#/definitions/auth"
        error_handler:
          $ref: "#/definitions/on_error"
        request_body_json: {}
      record_selector:
        $ref: "#/definitions/selector"
      paginator:
        $ref: "#/definitions/pagination"
  - type: DeclarativeStream
    name: alerts
    primary_key:
      - id
    retriever:
      type: SimpleRetriever
      requester:
        type: HttpRequester
        url_base: "https://{{ config['endpoint'] }}"
        path: v2/alerts
        http_method: GET
        request_parameters:
          order: '["asc"]'
          query: '{"updatedAt>={{ stream_interval.start_time if stream_interval else config['start_date']  }}"}'
        request_headers:
          Accept: application/json
        authenticator:
          $ref: "#/definitions/auth"
        error_handler:
          $ref: "#/definitions/on_error"
        request_body_json: {}
      record_selector:
        $ref: "#/definitions/selector"
      paginator:
        $ref: "#/definitions/pagination"
    incremental_sync:
      type: DatetimeBasedCursor
      cursor_field: updatedAt
      cursor_datetime_formats:
        - "%Y-%m-%dT%H:%M:%S.%fZ"
      datetime_format: "%s"
      start_datetime:
        datetime: "{{ config['start_date'] }}"
        datetime_format: "%Y-%m-%dT%H:%M:%SZ"
  - type: DeclarativeStream
    name: user_teams
    primary_key:
      - id
    schema_loader:
      type: JsonFileSchemaLoader
      file_path: "./source_opsgenie/schemas/user_teams.json"
    retriever:
      type: SimpleRetriever
      requester:
        type: HttpRequester
        url_base: "https://{{ config['endpoint'] }}"
        path: v2/users/{{ stream_partition.user_id }}/teams
        http_method: GET
        request_parameters: {}
        request_headers:
          Accept: application/json
        authenticator:
          $ref: "#/definitions/auth"
        error_handler:
          $ref: "#/definitions/on_error"
        request_body_json: {}
      record_selector:
        $ref: "#/definitions/selector"
      paginator:
        $ref: "#/definitions/pagination"
      partition_router:
        - type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: id
              partition_field: user_id
              stream:
                type: DeclarativeStream
                name: users
                primary_key:
                  - id
                schema_loader:
                  type: InlineSchemaLoader
                  schema:
                    $schema: http://json-schema.org/draft-07/schema#
                    additionalProperties: true
                    properties: {}
                    type: object
                retriever:
                  type: SimpleRetriever
                  requester:
                    type: HttpRequester
                    url_base: "https://{{ config['endpoint'] }}"
                    path: v2/users
                    http_method: GET
                    request_parameters: {}
                    request_headers:
                      Accept: application/json
                    authenticator:
                      $ref: "#/definitions/auth"
                    error_handler:
                      $ref: "#/definitions/on_error"
                    request_body_json: {}
                  record_selector:
                    type: RecordSelector
                    extractor:
                      type: DpathExtractor
                      field_path:
                        - data
                  paginator:
                    type: DefaultPaginator
                    page_token_option:
                      type: RequestPath
                    pagination_strategy:
                      type: CursorPagination
                      cursor_value: '{{ response.get("paging", {}).get("next", {}) }}'
                      stop_condition: '{{ not response.get("paging", {}).get("next", {}) }}'
    transformations:
      - type: AddFields
        fields:
          - path:
              - user_id
            value: "{{ stream_partition.user_id }}"
  - type: DeclarativeStream
    name: incidents
    primary_key:
      - id
    schema_loader:
      type: JsonFileSchemaLoader
      file_path: "./source_opsgenie/schemas/incidents.json"
    retriever:
      type: SimpleRetriever
      requester:
        type: HttpRequester
        url_base: "https://{{ config['endpoint'] }}"
        path: v1/incidents
        http_method: GET
        request_parameters: {}
        request_headers:
          Accept: application/json
        authenticator:
          $ref: "#/definitions/auth"
        error_handler:
          $ref: "#/definitions/on_error"
        request_body_json: {}
      record_selector:
        $ref: "#/definitions/selector"
      paginator:
        $ref: "#/definitions/pagination"
  - type: DeclarativeStream
    name: alert_recipients
    primary_key:
      - user_id
    schema_loader:
      type: JsonFileSchemaLoader
      file_path: "./source_opsgenie/schemas/alert_recipients.json"
    retriever:
      type: SimpleRetriever
      requester:
        type: HttpRequester
        url_base: "https://{{ config['endpoint'] }}"
        path: v2/alerts/{{ stream_partition.alert_id }}/recipients
        http_method: GET
        request_parameters: {}
        request_headers:
          Accept: application/json
        authenticator:
          $ref: "#/definitions/auth"
        error_handler:
          $ref: "#/definitions/on_error"
        request_body_json: {}
      record_selector:
        $ref: "#/definitions/selector"
      paginator:
        $ref: "#/definitions/pagination"
      partition_router:
        - type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: id
              partition_field: alert_id
              stream:
                type: DeclarativeStream
                name: alerts
                primary_key:
                  - id
                schema_loader:
                  type: InlineSchemaLoader
                  schema:
                    $schema: http://json-schema.org/draft-07/schema#
                    additionalProperties: true
                    properties: {}
                    type: object
                retriever:
                  type: SimpleRetriever
                  requester:
                    type: HttpRequester
                    url_base: "https://{{ config['endpoint'] }}"
                    path: v2/alerts
                    http_method: GET
                    request_parameters:
                      order: '["asc"]'
                      query: '{"updatedAt>={{ stream_interval.start_time }}"}'
                    request_headers:
                      Accept: application/json
                    authenticator:
                      $ref: "#/definitions/auth"
                    error_handler:
                      $ref: "#/definitions/on_error"
                    request_body_json: {}
                  record_selector:
                    type: RecordSelector
                    extractor:
                      type: DpathExtractor
                      field_path:
                        - data
                  paginator:
                    type: DefaultPaginator
                    page_token_option:
                      type: RequestPath
                    pagination_strategy:
                      type: CursorPagination
                      cursor_value: '{{ response.get("paging", {}).get("next", {}) }}'
                      stop_condition: '{{ not response.get("paging", {}).get("next", {}) }}'
                incremental_sync:
                  type: DatetimeBasedCursor
                  cursor_field: updatedAt
                  cursor_datetime_formats:
                    - "%Y-%m-%dT%H:%M:%S.%fZ"
                  datetime_format: "%s"
                  start_datetime:
                    type: MinMaxDatetime
                    datetime: "{{ config['start_date'] }}"
                    datetime_format: "%Y-%m-%dT%H:%M:%SZ"
    transformations:
      - type: AddFields
        fields:
          - path:
              - alert_id
            value: "{{ stream_partition.alert_id }}"
      - type: AddFields
        fields:
          - path:
              - user_id
            value: "{{ record['user']['id'] }}"
      - type: AddFields
        fields:
          - path:
              - user_username
            value: "{{ record['user']['username'] }}"
      - type: RemoveFields
        field_pointers:
          - - user
  - type: DeclarativeStream
    name: alert_logs
    primary_key:
      - offset
    schema_loader:
      type: JsonFileSchemaLoader
      file_path: "./source_opsgenie/schemas/alert_logs.json"
    retriever:
      type: SimpleRetriever
      requester:
        type: HttpRequester
        url_base: "https://{{ config['endpoint'] }}"
        path: v2/alerts/{{ stream_partition.alert_id }}/logs
        http_method: GET
        request_parameters:
          order: asc
        request_headers:
          Accept: application/json
        authenticator:
          $ref: "#/definitions/auth"
        error_handler:
          $ref: "#/definitions/on_error"
        request_body_json: {}
      record_selector:
        $ref: "#/definitions/selector"
      paginator:
        $ref: "#/definitions/pagination"
      partition_router:
        - type: SubstreamPartitionRouter
          parent_stream_configs:
            - type: ParentStreamConfig
              parent_key: id
              partition_field: alert_id
              stream:
                type: DeclarativeStream
                name: alerts
                primary_key:
                  - id
                schema_loader:
                  type: InlineSchemaLoader
                  schema:
                    $schema: http://json-schema.org/draft-07/schema#
                    additionalProperties: true
                    properties: {}
                    type: object
                retriever:
                  type: SimpleRetriever
                  requester:
                    type: HttpRequester
                    url_base: "https://{{ config['endpoint'] }}"
                    path: v2/alerts
                    http_method: GET
                    request_parameters:
                      order: '["asc"]'
                      query: '{"updatedAt>={{ stream_interval.start_time }}"}'
                    request_headers:
                      Accept: application/json
                    authenticator:
                      $ref: "#/definitions/auth"
                    error_handler:
                      $ref: "#/definitions/on_error"
                    request_body_json: {}
                  record_selector:
                    type: RecordSelector
                    extractor:
                      type: DpathExtractor
                      field_path:
                        - data
                  paginator:
                    type: DefaultPaginator
                    page_token_option:
                      type: RequestPath
                    pagination_strategy:
                      type: CursorPagination
                      cursor_value: '{{ response.get("paging", {}).get("next", {}) }}'
                      stop_condition: '{{ not response.get("paging", {}).get("next", {}) }}'
                incremental_sync:
                  type: DatetimeBasedCursor
                  cursor_field: updatedAt
                  cursor_datetime_formats:
                    - "%Y-%m-%dT%H:%M:%S.%fZ"
                  datetime_format: "%s"
                  start_datetime:
                    type: MinMaxDatetime
                    datetime: "{{ config['start_date'] }}"
                    datetime_format: "%Y-%m-%dT%H:%M:%SZ"
    transformations:
      - type: AddFields
        fields:
          - path:
              - alert_id
            value: "{{ stream_partition.alert_id }}"
