page_size: 50

schema_loader:
  type: JsonSchema
  file_path: "./source_sendgrid/schemas/{{ options.name }}.json"
result_selector:
  type: RecordSelector
  extractor:
    type: JelloExtractor
    transform: "_.result"
results_selector:
  type: RecordSelector
  extractor:
    type: JelloExtractor
    transform: "_.results"
requester:
  type: HttpRequester
  name: "{{ options['name'] }}"
  url_base: "https://api.sendgrid.com"
  http_method: "GET"
  authenticator:
    type: "BearerAuthenticator"
    token: "{{ config.apikey }}"
cursor_paginator:
  type: LimitPaginator
  url_base: "*ref(requester.url_base)"
  page_size: "*ref(page_size)"
  limit_option:
    inject_into: "request_parameter"
    field_name: "page_size"
  page_token_option:
    inject_into: "path"
  pagination_strategy:
    type: "CursorPagination"
    cursor_value: "{{ response._metadata.next }}"
offset_paginator:
  type: LimitPaginator
  $options:
    url_base: "*ref(requester.url_base)"
    page_size: "*ref(page_size)"
  limit_option:
    inject_into: "request_parameter"
    field_name: "limit"
  page_token_option:
    inject_into: "request_parameter"
    field_name: "offset"
  pagination_strategy:
    type: "OffsetIncrement"
retriever:
  type: SimpleRetriever
  name: "{{ options['name'] }}"
  primary_key: "{{ options['primary_key'] }}"

lists_stream:
  type: DeclarativeStream
  $options:
    name: "lists"
  primary_key: "id"
  schema_loader:
    $ref: "*ref(schema_loader)"
  retriever:
    $ref: "*ref(retriever)"
    record_selector:
      $ref: "*ref(result_selector)"
    requester:
      $ref: "*ref(requester)"
      path: "/v3/marketing/lists"
    paginator:
      $ref: "*ref(cursor_paginator)"
campaigns_stream:
  type: DeclarativeStream
  $options:
    name: "campaigns"
  primary_key: "id"
  schema_loader:
    $ref: "*ref(schema_loader)"
  retriever:
    $ref: "*ref(retriever)"
    record_selector:
      $ref: "*ref(result_selector)"
    requester:
      $ref: "*ref(requester)"
      path: "/v3/marketing/campaigns"
    paginator:
      $ref: "*ref(cursor_paginator)"
contacts_stream:
  type: DeclarativeStream
  $options:
    name: "contacts"
  primary_key: "id"
  schema_loader:
    $ref: "*ref(schema_loader)"
  retriever:
    $ref: "*ref(retriever)"
    record_selector:
      $ref: "*ref(result_selector)"
    requester:
      $ref: "*ref(requester)"
      path: "/v3/marketing/contacts"
    paginator:
      type: "NoPagination"

stats_automations_stream:
  type: DeclarativeStream
  $options:
    name: "stats_automations"
  primary_key: "id"
  schema_loader:
    $ref: "*ref(schema_loader)"
  retriever:
    $ref: "*ref(retriever)"
    record_selector:
      $ref: "*ref(results_selector)"
    requester:
      $ref: "*ref(requester)"
      path: "/v3/marketing/stats/automations"
    paginator:
      $ref: "*ref(cursor_paginator)"
segments_stream:
  type: DeclarativeStream
  $options:
    name: "segments"
  primary_key: "id"
  schema_loader:
    $ref: "*ref(schema_loader)"
  retriever:
    $ref: "*ref(retriever)"
    record_selector:
      $ref: "*ref(results_selector)"
    requester:
      $ref: "*ref(requester)"
      path: "/v3/marketing/segments"
    paginator:
      type: "NoPagination"
single_sends_stream:
  type: DeclarativeStream
  $options:
    name: "single_sends"
  primary_key: "id"
  schema_loader:
    $ref: "*ref(schema_loader)"
  retriever:
    $ref: "*ref(retriever)"
    record_selector:
      $ref: "*ref(results_selector)"
    requester:
      $ref: "*ref(requester)"
      path: "/v3/marketing/stats/singlesends"
    paginator:
      $ref: "*ref(cursor_paginator)"
templates_stream:
  type: DeclarativeStream
  $options:
    name: "templates"
  primary_key: "id"
  schema_loader:
    $ref: "*ref(schema_loader)"
  retriever:
    $ref: "*ref(retriever)"
    record_selector:
      $ref: "*ref(result_selector)"
    requester:
      $ref: "*ref(requester)"
      path: "/v3/templates"
      request_options_provider:
        request_parameters:
          generations: "legacy,dynamic"
    paginator:
      $ref: "*ref(cursor_paginator)"
streams:
  - "*ref(lists_stream)"
  - "*ref(campaigns_stream)"
  - "*ref(contacts_stream)"
  - "*ref(stats_automations_stream)"
  - "*ref(segments_stream)"
  - "*ref(single_sends_stream)"
  - "*ref(templates_stream)"
check:
  type: CheckStream
  stream_names: ["lists"]
